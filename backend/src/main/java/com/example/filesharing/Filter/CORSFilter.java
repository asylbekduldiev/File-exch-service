package com.example.filesharing.Filter;import jakarta.ws.rs.container.*;import jakarta.ws.rs.core.Response;import jakarta.ws.rs.ext.Provider;import java.io.IOException;@Provider@PreMatchingpublic class CORSFilter implements ContainerRequestFilter, ContainerResponseFilter {    @Override    public void filter(ContainerRequestContext requestContext) throws IOException {        if ("OPTIONS".equalsIgnoreCase(requestContext.getMethod())) {            requestContext.abortWith(Response                    .status(Response.Status.OK) // <== обязательно OK                    .header("Access-Control-Allow-Origin", "*")                    .header("Access-Control-Allow-Headers", "*")                    .header("Access-Control-Allow-Methods", "GET, POST, OPTIONS")                    .header("Access-Control-Max-Age", "3600")                    .build());        }    }    @Override    public void filter(ContainerRequestContext requestContext,                       ContainerResponseContext responseContext) {        responseContext.getHeaders().putSingle("Access-Control-Allow-Origin", "*");        responseContext.getHeaders().putSingle("Access-Control-Allow-Headers", "*");        responseContext.getHeaders().putSingle("Access-Control-Allow-Methods", "GET, POST, OPTIONS");        responseContext.getHeaders().putSingle("Access-Control-Max-Age", "3600");    }}