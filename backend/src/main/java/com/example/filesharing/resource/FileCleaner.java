package com.example.filesharing.resource;import com.example.filesharing.Model.FileInfo;import com.example.filesharing.Model.Storage;import java.io.File;import java.time.Duration;import java.util.Iterator;import java.util.Map;import java.util.concurrent.*;public class FileCleaner {    private static final Duration MAX_AGE = Duration.ofDays(30);    private static final ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();    public static void start() {        executor.scheduleAtFixedRate(() -> {            long now = System.currentTimeMillis();            Iterator<Map.Entry<String, FileInfo>> iterator = Storage.downloadMap.entrySet().iterator();            while (iterator.hasNext()) {                Map.Entry<String, FileInfo> entry = iterator.next();                FileInfo info = entry.getValue();                if (now - info.lastAccessTime > MAX_AGE.toMillis()) {                    File file = new File(info.fileName);                    if (file.exists()) {                        boolean deleted = file.delete();                        if (!deleted) {                            System.err.println("Failed to delete file:" + file.getAbsolutePath());                        }                    }                    iterator.remove();                    System.out.println("Deleted expired file: " + file.getName());                }            }        }, 0, 5, TimeUnit.MINUTES);    }    public static void stop() {        executor.shutdownNow();    }}